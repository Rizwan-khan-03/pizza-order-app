{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { loginUserThunk } from \"../services\";\nconst initialState = {\n  status: 'idle',\n  user: {}\n};\nconst slice = createSlice({\n  name: 'testSlice',\n  initialState,\n  reducers: {\n    loginUser: (state, action) => {\n      state.user = action.payload;\n    },\n    extraReducer: builder => {\n      builder.addCase(loginUserThunk.pending, state => {\n        state.status = \"loading\";\n      }).addCase(loginUserThunk.fulfilled, (state, action) => {\n        var _action$payload;\n        console.log('action', action);\n        state.status = \"idle\";\n        state.user = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.data.payload;\n      }).addCase(loginUserThunk.rejected, state => {\n        state.status = \"failed\";\n      });\n    }\n  }\n});\nexport const {\n  loginUser\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","loginUserThunk","initialState","status","user","slice","name","reducers","loginUser","state","action","payload","extraReducer","builder","addCase","pending","fulfilled","_action$payload","console","log","data","rejected","actions","reducer"],"sources":["/home/abc/Documents/ideal/MT/mt-app/src/Redux/reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { loginUserThunk } from \"../services\";\n\nconst initialState = {\n    status: 'idle',\n    user: {}\n}\nconst slice = createSlice({\n    name: 'testSlice',\n    initialState,\n    reducers: {\n        loginUser: (state, action) => {\n            state.user = action.payload\n        },\n        extraReducer: (builder) => {\n            builder\n                .addCase(loginUserThunk.pending, (state) => {\n                    state.status = \"loading\";\n                })\n                .addCase(loginUserThunk.fulfilled, (state, action) => {\n                    console.log('action', action);\n                    state.status = \"idle\";\n                    state.user = action?.payload?.data.payload;\n                })\n                .addCase(loginUserThunk.rejected, (state) => {\n                    state.status = \"failed\";\n                })\n        }\n    }\n});\nexport const { loginUser } = slice.actions\nexport default slice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,aAAa;AAE5C,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE,CAAC;AACX,CAAC;AACD,MAAMC,KAAK,GAAGL,WAAW,CAAC;EACtBM,IAAI,EAAE,WAAW;EACjBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,YAAY,EAAGC,OAAO,IAAK;MACvBA,OAAO,CACFC,OAAO,CAACb,cAAc,CAACc,OAAO,EAAGN,KAAK,IAAK;QACxCA,KAAK,CAACN,MAAM,GAAG,SAAS;MAC5B,CAAC,CAAC,CACDW,OAAO,CAACb,cAAc,CAACe,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;QAAA,IAAAO,eAAA;QAClDC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAET,MAAM,CAAC;QAC7BD,KAAK,CAACN,MAAM,GAAG,MAAM;QACrBM,KAAK,CAACL,IAAI,GAAGM,MAAM,aAANA,MAAM,wBAAAO,eAAA,GAANP,MAAM,CAAEC,OAAO,cAAAM,eAAA,uBAAfA,eAAA,CAAiBG,IAAI,CAACT,OAAO;MAC9C,CAAC,CAAC,CACDG,OAAO,CAACb,cAAc,CAACoB,QAAQ,EAAGZ,KAAK,IAAK;QACzCA,KAAK,CAACN,MAAM,GAAG,QAAQ;MAC3B,CAAC,CAAC;IACV;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAEK;AAAU,CAAC,GAAGH,KAAK,CAACiB,OAAO;AAC1C,eAAejB,KAAK,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}