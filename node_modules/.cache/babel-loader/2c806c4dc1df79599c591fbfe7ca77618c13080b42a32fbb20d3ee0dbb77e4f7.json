{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { loginUserThunk } from \"./services\";\nconst initialState = {\n  status: 'idle',\n  user: {}\n};\nconst slice = createSlice({\n  name: 'testSlice',\n  initialState,\n  reducers: {\n    loginUser: (state, action) => {\n      state.user = action.payload;\n    },\n    extraReducer: builder => {\n      builder.addCase(loginUserThunk.pending, state => {\n        state.status = \"loading\";\n      });\n    }\n  }\n});\nexport const {\n  loginUser\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","loginUserThunk","initialState","status","user","slice","name","reducers","loginUser","state","action","payload","extraReducer","builder","addCase","pending","actions","reducer"],"sources":["/home/abc/Documents/ideal/MT/mt-app/src/reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { loginUserThunk } from \"./services\";\n\nconst initialState={\n    status:'idle',\n    user:{}\n}\nconst slice=createSlice({\n    name:'testSlice',\n    initialState,\n    reducers:{\n        loginUser:(state,action)=>{\n            state.user=action.payload\n        },\n        extraReducer:(builder)=>{\n            builder\n            .addCase(loginUserThunk.pending, (state) => {\n                state.status = \"loading\";\n              })\n        }\n    }\n});\nexport const { loginUser} = slice.actions\nexport default slice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,YAAY;AAE3C,MAAMC,YAAY,GAAC;EACfC,MAAM,EAAC,MAAM;EACbC,IAAI,EAAC,CAAC;AACV,CAAC;AACD,MAAMC,KAAK,GAACL,WAAW,CAAC;EACpBM,IAAI,EAAC,WAAW;EAChBJ,YAAY;EACZK,QAAQ,EAAC;IACLC,SAAS,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MACtBD,KAAK,CAACL,IAAI,GAACM,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,YAAY,EAAEC,OAAO,IAAG;MACpBA,OAAO,CACNC,OAAO,CAACb,cAAc,CAACc,OAAO,EAAGN,KAAK,IAAK;QACxCA,KAAK,CAACN,MAAM,GAAG,SAAS;MAC1B,CAAC,CAAC;IACR;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAEK;AAAS,CAAC,GAAGH,KAAK,CAACW,OAAO;AACzC,eAAeX,KAAK,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}